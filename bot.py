from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils import executor

API_TOKEN = "8139186032:AAG-vUK1grO-R_II8AxCwmb20k-dKYC7bxQ"
ADMIN_GROUP_ID = -1002529705243

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_start_kb = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∏ –Ω–∞—á–∞—Ç—å", callback_data="start_chat")
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∞
admin_kb = InlineKeyboardMarkup().add(
    InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data="admin_accept"),
    InlineKeyboardButton("‚õî –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data="admin_reject")
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_control_kb = InlineKeyboardMarkup().add(
    InlineKeyboardButton("üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", callback_data="user_stop"),
    InlineKeyboardButton("‚ôªÔ∏è –°–º–µ–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∞", callback_data="user_switch")
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∞
admin_control_kb = InlineKeyboardMarkup().add(
    InlineKeyboardButton("üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", callback_data="admin_stop")
)


@dp.message_handler(commands=['start'])
async def send_rules(message: types.Message):
    await message.answer(
        "üìå –ü—Ä–∞–≤–∏–ª–∞:\n1. –ó–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ\n2. –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç\n3. –°–æ–±–ª—é–¥–∞–π –≤–µ–∂–ª–∏–≤–æ—Å—Ç—å",
        reply_markup=user_start_kb
    )


@dp.callback_query_handler(lambda cb: cb.data == "start_chat")
async def start_chat(cb: types.CallbackQuery):
    user_id = cb.from_user.id
    await cb.message.delete()

    request_msg = await bot.send_message(
        ADMIN_GROUP_ID,
        f"üí¨ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}",
        reply_markup=InlineKeyboardMarkup().add(
            InlineKeyboardButton("üü¢ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"accept_{user_id}"),
            InlineKeyboardButton("üî¥ –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{user_id}")
        )
    )

    await cb.message.answer("‚è≥ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")


@dp.callback_query_handler(lambda cb: cb.data.startswith("accept_"))
async def accept_user(cb: types.CallbackQuery):
    user_id = int(cb.data.split("_")[1])
    await bot.send_message(user_id, "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!", reply_markup=user_control_kb)
    await cb.message.edit_text(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø—Ä–∏–Ω—è—Ç.")


@dp.callback_query_handler(lambda cb: cb.data.startswith("reject_"))
async def reject_user(cb: types.CallbackQuery):
    user_id = int(cb.data.split("_")[1])
    await bot.send_message(user_id, "‚ùå –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")
    await cb.message.edit_text(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–∫–ª–æ–Ω—ë–Ω.")


@dp.callback_query_handler(lambda cb: cb.data in ["user_stop", "user_switch"])
async def handle_user_control(cb: types.CallbackQuery):
    if cb.data == "user_stop":
        await cb.message.answer("üõë –í—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —á–∞—Ç.")
    elif cb.data == "user_switch":
        await cb.message.answer("‚ôªÔ∏è –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–º–µ–Ω—É –∞–¥–º–∏–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
    await cb.answer()


@dp.callback_query_handler(lambda cb: cb.data == "admin_stop")
async def handle_admin_stop(cb: types.CallbackQuery):
    await cb.message.answer("üõë –ê–¥–º–∏–Ω –æ—Å—Ç–∞–Ω–æ–≤–∏–ª —á–∞—Ç.")
    await cb.answer()


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
