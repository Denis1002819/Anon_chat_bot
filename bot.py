from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

API_TOKEN = '8139186032:AAG-vUK1grO-R_II8AxCwmb20k-dKYC7bxQ'
ADMINS_GROUP_ID = -1002529705243

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())

# –°–æ—Å—Ç–æ—è–Ω–∏—è
class ChatState(StatesGroup):
    waiting = State()
    chatting = State()

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤
active_chats = {}

# –°—Ç–∞—Ä—Ç –∫–æ–º–∞–Ω–¥—ã
@dp.message_handler(commands='start')
async def cmd_start(message: types.Message):
    kb = InlineKeyboardMarkup().add(InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª–∞", callback_data="accept_rules"))
    await message.answer("üìå –ü—Ä–∞–≤–∏–ª–∞:\n‚Äî –ë–µ–∑ 18+\n‚Äî –ë–µ–∑ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –ª–∏—á–Ω–æ—Å—Ç–∏", reply_markup=kb)

@dp.callback_query_handler(lambda c: c.data == "accept_rules")
async def accept_rules(cb: types.CallbackQuery):
    kb = InlineKeyboardMarkup().add(InlineKeyboardButton("üöÄ –ù–∞—á–∞—Ç—å —á–∞—Ç", callback_data="start_chat"))
    await cb.message.edit_text("–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç.", reply_markup=kb)

@dp.callback_query_handler(lambda c: c.data == "start_chat")
async def start_chat(cb: types.CallbackQuery, state: FSMContext):
    user_id = cb.from_user.id
    if user_id in active_chats:
        await cb.message.answer("‚õî –í—ã —É–∂–µ –≤ —á–∞—Ç–µ.")
        return

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –≥—Ä—É–ø–ø—É –∞–¥–º–∏–Ω–æ–≤
    request_msg = await bot.send_message(
        chat_id=ADMINS_GROUP_ID,
        text=f"üí¨ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `{user_id}`",
        parse_mode="Markdown",
        reply_markup=InlineKeyboardMarkup().add(
            InlineKeyboardButton("üü¢ –ü—Ä–∏–Ω—è—Ç—å", callback_dat_
