from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
from aiogram.dispatcher.filters import Text
import logging

TOKEN = "8139186032:AAG-vUK1grO-R_II8AxCwmb20k-dKYC7bxQ"
ADMIN_GROUP_ID = -1002529705243

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)

sessions = {}

start_keyboard = InlineKeyboardMarkup().add(
    InlineKeyboardButton("‚úÖ –ù–∞—á–∞—Ç—å", callback_data="start_chat")
)

user_keyboard = InlineKeyboardMarkup(row_width=2).add(
    InlineKeyboardButton("üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", callback_data="stop_chat"),
    InlineKeyboardButton("üîÅ –°–º–µ–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∞", callback_data="change_admin")
)

admin_keyboard = InlineKeyboardMarkup().add(
    InlineKeyboardButton("üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", callback_data="stop_chat")
)

@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.answer(
        "üìå –ü—Ä–∞–≤–∏–ª–∞:\n1. –ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å.\n2. –ó–∞–ø—Ä–µ—â—ë–Ω —Å–ø–∞–º –∏ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è.\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:",
        reply_markup=start_keyboard
    )

@dp.callback_query_handler(Text(equals="start_chat"))
async def request_chat(cb: types.CallbackQuery):
    user_id = cb.from_user.id
    if user_id in sessions:
        await cb.message.edit_text("‚è≥ –í—ã —É–∂–µ –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É.")
        return

    msg = await bot.send_message(
        ADMIN_GROUP_ID,
        f"üì® –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
        reply_markup=InlineKeyboardMarkup().add(
            InlineKeyboardButton("üü¢ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"accept_{user_id}"),
            InlineKeyboardButton("üî¥ –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"decline_{user_id}")
        )
    )
    sessions[user_id] = {"status": "pending", "request_msg_id": msg.message_id}
    await cb.message.edit_text("‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")

@dp.callback_query_handler(lambda c: c.data.startswith("accept_"))
async def accept(cb: types.CallbackQuery):
    user_id = int(cb.data.split("_")[1])
    admin_id = cb.from_user.id
    sessions[user_id] = {"admin_id": admin_id}
    sessions[admin_id] = {"user_id": user_id}
    await bot.send_message(user_id, "‚úÖ –ê–¥–º–∏–Ω –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è. –ú–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å.", reply_markup=user_keyboard)
    await bot.send_message(admin_id, "‚úÖ –í—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.", reply_markup=admin_keyboard)
    await cb.message.edit_text("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω—è—Ç.")

@dp.callback_query_handler(lambda c: c.data.startswith("decline_"))
async def decline(cb: types.CallbackQuery):
    user_id = int(cb.data.split("_")[1])
    await bot.send_message(user_id, "‚ùå –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")
    await cb.message.edit_text("‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")
    sessions.pop(user_id, None)

@dp.callback_query_handler(Text(equals="stop_chat"))
async def stop_chat(cb: types.CallbackQuery):
    user_id = cb.from_user.id
    partner_id = sessions.get(user_id, {}).get("admin_id") or sessions.get(user_id, {}).get("user_id")
    if partner_id:
        await bot.send_message(partner_id, "‚ùå –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∑–∞–≤–µ—Ä—à–∏–ª —á–∞—Ç.")
        sessions.pop(partner_id, None)
    sessions.pop(user_id, None)
    await cb.message.edit_text("üîï –ß–∞—Ç –∑–∞–≤–µ—Ä—à—ë–Ω.")

@dp.callback_query_handler(Text(equals="change_admin"))
async def change_admin(cb: types.CallbackQuery):
    user_id = cb.from_user.id
    partner_id = sessions.get(user_id, {}).get("admin_id")
    if partner_id:
        await bot.send_message(partner_id, "üîÑ –ü–æ
