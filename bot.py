from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
from aiogram.dispatcher.filters import Text
import logging

TOKEN = "8139186032:AAG-vUK1grO-R_II8AxCwmb20k-dKYC7bxQ"
ADMIN_GROUP_ID = -1002529705243

bot = Bot(token=TOKEN, parse_mode="HTML")
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)

# active_chats: user_id -> admin_id
active_chats = {}

# --- –ö–Ω–æ–ø–∫–∏ ---
start_kb = InlineKeyboardMarkup().add(InlineKeyboardButton("‚úÖ –ù–∞—á–∞—Ç—å", callback_data="start_chat"))
user_kb = InlineKeyboardMarkup().add(
    InlineKeyboardButton("üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", callback_data="stop_chat"),
    InlineKeyboardButton("üîÅ –°–º–µ–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∞", callback_data="change_admin")
)
admin_kb = InlineKeyboardMarkup().add(InlineKeyboardButton("üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", callback_data="stop_chat"))

# --- –ö–æ–º–∞–Ω–¥—ã ---
@dp.message_handler(commands=["start"])
async def start_handler(message: types.Message):
    await message.answer(
        "üìå <b>–ü—Ä–∞–≤–∏–ª–∞:</b>\n1. –ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å.\n2. –ù–µ –Ω–∞—Ä—É—à–∞—Ç—å –∑–∞–∫–æ–Ω.\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:",
        reply_markup=start_kb
    )

@dp.callback_query_handler(Text(equals="start_chat"))
async def send_request(cb: types.CallbackQuery):
    user_id = cb.from_user.id
    await bot.send_message(
        ADMIN_GROUP_ID,
        f"üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <code>{user_id}</code>",
        reply_markup=InlineKeyboardMarkup().add(
            InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"accept_{user_id}"),
            InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"decline_{user_id}")
        )
    )
    await cb.message.edit_text("‚è≥ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

@dp.callback_query_handler(lambda c: c.data.startswith("accept_"))
async def accept_request(cb: types.CallbackQuery):
    user_id = int(cb.data.split("_")[1])
    active_chats[user_id] = cb.from_user.id
    await bot.send_message(user_id, "‚úÖ –í–∞—Å –ø–æ–¥–∫–ª—é—á–∏–ª–∏ –∫ —á–∞—Ç—É. –ú–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å.", reply_markup=user_kb)
    await cb.message.edit_text("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∫–ª—é—á—ë–Ω.", reply_markup=admin_kb)

@dp.callback_query_handler(lambda c: c.data.startswith("decline_"))
async def decline_request(cb: types.CallbackQuery):
    user_id = int(cb.data.split("_")[1])
    await bot.send_message(user_id, "‚ùå –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")
    await cb.message.edit_text("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª–æ–Ω—ë–Ω.")

@dp.callback_query_handler(Text(equals="stop_chat"))
async def stop_chat(cb: types.CallbackQuery):
    user_id = cb.from_user.id
    target_id = None
    for u, a in active_chats.items():
        if u == user_id:
            target_id = a
        elif a == user_id:
            target_id = u

    if target_id:
        await bot.send_message(target_id, "üö´ –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∑–∞–≤–µ—Ä—à–∏–ª —á–∞—Ç.")
        del active_chats[user_id] if user_id in active_chats else active_chats[target_id]
    await cb.message.edit_text("üîï –í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ —á–∞—Ç.")

@dp.callback_query_handler(Text(equals="change_admin"))
async def change_admin(cb: types.CallbackQuery):
    user_id = cb.from_user.id
    if user_id in active_chats:
        admin_id = active_chats.pop(user_id)
        await bot.send_message(admin_id, "üîÅ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–æ—Å–∏–ª –Ω–æ–≤–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.")
        await bot.send_message(user_id, "üîÑ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ.", reply_markup=start_kb)

@dp.message_handler()
async def forward_messages(msg: types.Message):
    sender_id = msg.from_user.id
    if sender_id in active_chats:
        recipient_id = active_chats[sender_id]
        await bot.send_message(recipient_id, f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:\n{msg.text}")
    elif sender_id in active_chats.values():
        for uid, aid in active_chats.items():
            if aid == sender_id:
                await bot.send_message(uid, f"üëÆ –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∞:\n{msg.text}")
                break

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
